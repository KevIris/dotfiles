" move between buffers with ctrl+l/ h
inoremap <C-h> <esc><C-w>h
inoremap <C-l> <esc><C-w>l

"for the keyboardio which annoyingly doesn't have the escape where my muscle
"memory wants it.
inoremap <PageUp> <esc>:exec OnSaveCommands()<cr>``zz<bar>:echom expand("%") . '    saved'<cr>

" similarly pagedown is where backslash should be
inoremap <PageDown> \

" semi-colon at the end of the current line in insert mode
inoremap ;; <esc>A;<esc>

" drop down for config things.
inoremap <C-a> <C-R>=ConfigDropdown()<CR>

" variable with config files as a list - could do with being dynamic
source ~/.config_file_list

let g:config_dropdown = 0
" Called in the insert remap above which creates the dropdown using complete; sets a global boolean variable so we know what sort of complete it is
func! ConfigDropdown()
    call complete(col('.'), g:config_file_list)
    let g:config_dropdown = 1
    return ''
endfunc

" Calls yet another command upon completion of the dropdown
augroup configDropdown
    autocmd!
    autocmd CompleteDone * call DoConfigDropdown(v:completed_item)
augroup END

" opens the corresponding file, deletes the text that was inserted.
function! DoConfigDropdown(value)
    if g:config_dropdown == 1
        normal ux
        execute(":e " . a:value.info)
        execute(":pclose")
    endif

    let g:config_dropdown = 0
endfunction
